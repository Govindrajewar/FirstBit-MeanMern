Assignment: Battleship Game
- Create an array of 5 numbers - (0,1,1,0,1)
- Imagine that we are building a game. The places where 1's are present are our positions of battleships.
- Now keep on asking the user for any number between 1 to 5.
    If the user enters an invalid number alert that 'Enter a valid number'.
- Each time user enters a number increment the (guesses) count by 1.
- If the number user has entered matches with the position of the battleships
    (i.e 2, 3 and 5), then alert that 'You have hit a battleship'. Increment the hit count by 1.
- If the number user has entered doesn't match with the position of the battleships
    (ie. 1, 4), then alert that 'You missed the battleship'.
- The game will stop if the total successful hits are made. (3 hits)
- Display total count of guesses.


# Nested Objects:
- When we have an Object inside another object, then it is called as “Nested” object.
eg.,
    student = {
        rollno: 7,
        name: "MS Dhoni",
        email: "msdhoni@gmail.com",
        address: {
            street: 202,
            city: "Nanded",
            pinCode: 431602,
            state: "MH",
            printPinCode: function (){
                return this.pinCode;
            }
        },
        display: function(){
        console.log(this.name + " student has roll no = " + this.rollno);
        }
    }


# Constructor Function :
- A Special Function which allows us to create multiple objects.
eg.,
    function Book (title, author, price){
        this.title = title;
        this.author = author;
        this.price = price;

        this.read = function (){
            console.log("I am reading " + this.title + " written by " + this.author);
        }
    }

    // call:
    let b = new Book("Wings of Fire", "Dr. Kalam", 500);
    console.log(b);
    b.read();


# Class:
eg.,
    class Car {
        constructor(brand, model, price){
            this.brand = brand;
            this.model = model;
            this.price = price;
        }

        Print(){
            console.log(
                "Brand : " + this.brand+
                " Model : " + this.model+
                " Price : " + this.price
            )
        }
    }

    let car1 = new Car("Honda", "Jazz", 1100000);
    car1.Print();
